[tool.poetry]
name = "nlp-pipeline"
version = "1.0.0"
description = "A real-time NLP processing pipeline with FastAPI and Ray Serve"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.115.12"
uvicorn = "^0.34.2"
ray = {extras = ["serve"], version = "^2.45.0"}
transformers = "^4.51.3"
redis = "^6.0.0"
python-jose = "^3.4.0"
passlib = "^1.7.4"
python-multipart = "^0.0.20"
pydantic = "^2.11.4"
httpx = "^0.28.1"
python-dotenv = "^1.1.0"
opentelemetry-api = "^1.32.1"
opentelemetry-sdk = "^1.32.1"
opentelemetry-instrumentation-fastapi = "^0.53b1"
opentelemetry-exporter-otlp = "^1.32.1"
opentelemetry-exporter-jaeger = "^1.21.0"
numpy = "^1.26"
torch = "^2.7.0"
jupyterlab = "^4.4.2"
pandas = "^2.2.3"
matplotlib = "<3.10.0"
seaborn = "^0.13.2"
ipython = "<9.0.0"
nltk = "^3.9.1"
ipywidgets = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.2.0"
ruff = "^0.11.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py39"

# Enable Pyflakes, pycodestyle, and other linting rules
lint.select = [
  "E",   # pycodestyle errors
  "F",   # Pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
  "N",   # pep8-naming
  "SIM", # flake8-simplify
]
lint.ignore = []

# Same as Black
lint.extend-exclude = ["example_app", "__pycache__"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

